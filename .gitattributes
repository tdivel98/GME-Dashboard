
!pip install yfinance==0.1.67
!pip install pandas==1.3.3
!pip install requests==2.26.0
!mamba install bs4==4.10.0 -y
!pip install plotly==5.3.1

import yfinance as yf
import pandas as pd
import requests
from bs4 import BeautifulSoup
import plotly.graph_objects as go
from plotly.subplots import make_subplots

# Define function that will take dataframe with stock data and dataframe with revenue data as well as name of stock
def make_graph(stock_data, revenue_data, stock):
    fig = make_subplots(rows=2, cols=1, shared_xaxes=True, subplot_titles=("Historical Share Price", "Historical Revenue"), vertical_spacing = .3)
    stock_data_specific = stock_data[stock_data.Date <= '2021--06-14']
    revenue_data_specific = revenue_data[revenue_data.Date <= '2021-04-30']
    fig.add_trace(go.Scatter(x=pd.to_datetime(stock_data_specific.Date, infer_datetime_format=True), y=stock_data_specific.Close.astype("float"), name="Share Price"), row=1, col=1)
    fig.add_trace(go.Scatter(x=pd.to_datetime(revenue_data_specific.Date, infer_datetime_format=True), y=revenue_data_specific.Revenue.astype("float"), name="Revenue"), row=2, col=1)
    fig.update_xaxes(title_text="Date", row=1, col=1)
    fig.update_xaxes(title_text="Date", row=2, col=1)
    fig.update_yaxes(title_text="Price ($US)", row=1, col=1)
    fig.update_yaxes(title_text="Revenue ($US Millions)", row=2, col=1)
    fig.update_layout(showlegend=False,
    height=900,
    title=stock,
    xaxis_rangeslider_visible=True)
    fig.show()

GME = yf.Ticker("GME") #Ticker of stock we want to extract
gme_data= GME.history(periods="max") #extract stock info and save to dataframe and get info over max amount of time
gme_data.reset_index(inplace=True) #reset the index

html_data =requests.get("https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud\
/IBMDeveloperSkillsNetwork-PY0220EN-SkillsNetwork/labs/project/stock.html").text #download webpage and save to variable

soup = BeautifulSoup(html_data,'html5lib') #Parse the html 
dfs = pd.read_html(html_data)
gme_revenue=dfs[1]
gme_revenue.columns = ["Date","Revenue"] #rename the columns
gme_revenue.reset_index(inplace=True) 
gme_revenue["Revenue"] = tesla_revenue['Revenue'].str.replace(',|\$',"") # remove comma and dollar sign
gme_revenue.dropna(inplace=True) #remove empty or null strings in Revenue column

gme_revenue = tesla_revenue[tesla_revenue['Revenue'] != ""]
make_graph(gme_data,gme_revenue,"Gamestop")